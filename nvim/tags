!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	Development	//
(	keybinds.vim	/^inoremap ( ()<left>$/;"	m
,1	tabs.vim	/^nnoremap ,1 1gt<CR>$/;"	m
,2	tabs.vim	/^nnoremap ,2 2gt<CR>$/;"	m
,3	tabs.vim	/^nnoremap ,3 3gt<CR>$/;"	m
,4	tabs.vim	/^nnoremap ,4 4gt<CR>$/;"	m
,5	tabs.vim	/^nnoremap ,5 5gt<CR>$/;"	m
,6	tabs.vim	/^nnoremap ,6 6gt<CR>$/;"	m
;	keybinds.vim	/^nnoremap ; <Esc>A;$/;"	m
<A-n>	tabs.vim	/^nnoremap <A-n> :tabnext<CR>$/;"	m
<A-p>	tabs.vim	/^nnoremap <A-p> :tabprev<CR>$/;"	m
<A-r>	keybinds.vim	/^nnoremap <A-r>  :source ~\/.config\/nvim\/init.vim<CR>$/;"	m
<C-a>	keybinds.vim	/^map <C-a> <esc>ggVG<CR>$/;"	m
<C-b>	fzf.vim	/^map <C-b> :Buffers<CR>$/;"	m
<C-b>	tabs.vim	/^nnoremap <C-b> 4gt<CR>$/;"	m
<C-f>	fzf.vim	/^map <C-f> :Files<CR>$/;"	m
<C-h>	keybinds.vim	/^map <C-h> <C-W>h$/;"	m
<C-j>	keybinds.vim	/^map <C-j> <C-W>j$/;"	m
<C-k>	keybinds.vim	/^map <C-k> <C-W>k$/;"	m
<C-l>	keybinds.vim	/^map <C-l> <C-W>l$/;"	m
<C-m>	fzf.vim	/^map <C-m> :Marks<CR>$/;"	m
<C-s>	keybinds.vim	/^inoremap <C-s> :w<CR>$/;"	m
<C-x>	tabs.vim	/^nnoremap <C-x> 2gt<CR>$/;"	m
<C-y>	tabs.vim	/^nnoremap <C-y> 1gt<CR>$/;"	m
<F0>	tabs.vim	/^nnoremap <F0> 10gt<CR>$/;"	m
<F1>	tabs.vim	/^nnoremap <F1> 1gt<CR>$/;"	m
<F2>	tabs.vim	/^nnoremap <F2> 2gt<CR>$/;"	m
<F3>	tabs.vim	/^nnoremap <F3> 3gt<CR>$/;"	m
<F4>	tabs.vim	/^nnoremap <F4> 4gt<CR>$/;"	m
<F5>	tabs.vim	/^nnoremap <F5> 5gt<CR>$/;"	m
<F6>	tabs.vim	/^nnoremap <F6> 6gt<CR>$/;"	m
<F7>	tabs.vim	/^nnoremap <F7> 7gt<CR>$/;"	m
<F8>	tabs.vim	/^nnoremap <F8> 8gt<CR>$/;"	m
<F9>	tabs.vim	/^nnoremap <F9> 9gt<CR>$/;"	m
<S-TAB>	cocdefaults.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	cocdefaults.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<TAB>	universal.vim	/^inoremap <expr><TAB>  pumvisible() ? "\\<C-n>" : "\\<TAB>"$/;"	m
<c-space>	cocdefaults.vim	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<cr>	cocdefaults.vim	/^inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<esc>	universal.vim	/^nnoremap <esc> :noh<CR>$/;"	m
<leader>,	keybinds.vim	/^nmap <silent> <leader>, A;$/;"	m
<leader>a	cocdefaults.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	cocdefaults.vim	/^nmap <leader>ac  <Plug>(coc-codeaction)$/;"	m
<leader>cd	keybinds.vim	/^nmap <silent> <leader>cd :cd \/home\/davidv7\/$/;"	m
<leader>fb	keybinds.vim	/^nmap <silent> <leader>fb :Files<CR>$/;"	m
<leader>fq	keybinds.vim	/^nmap <silent> <leader>fq :q!<CR>$/;"	m
<leader>fw	keybinds.vim	/^nmap <silent> <leader>fw :w!<CR>$/;"	m
<leader>gi	keybinds.vim	/^nnoremap <leader>gi :!goimports -w %<CR>$/;"	m
<leader>i	keybinds.vim	/^nmap <silent> <leader>i <Plug>(coc-implementation)$/;"	m
<leader>ll	keybinds.vim	/^nmap <leader>ll :!ls %:p<CR>$/;"	m
<leader>m	keybinds.vim	/^nmap <leader>m :Marks<CR>$/;"	m
<leader>qf	cocdefaults.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>r	keybinds.vim	/^nmap <silent> <leader>r <Plug>(coc-references)$/;"	m
<leader>r	keybinds.vim	/^nnoremap <leader>r <Plug>(coc-rename)$/;"	m
<leader>rn	cocdefaults.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>rn	keybinds.vim	/^nnoremap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>t	keybinds.vim	/^nnoremap <leader>t :Tags<CR>$/;"	m
<leader>td	keybinds.vim	/^nmap <silent> <leader>td <Plug>(coc-type-definition)$/;"	m
<leader>tt	keybinds.vim	/^nmap <leader>tt :!setxkbmap -option caps:escape<CR>$/;"	m
<leader>u	keybinds.vim	/^nmap <silent> <leader>u <Plug>(coc-references)$/;"	m
<space>a	cocdefaults.vim	/^nnoremap <silent> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<space>c	cocdefaults.vim	/^nnoremap <silent> <space>c  :<C-u>CocList commands<cr>$/;"	m
<space>e	cocdefaults.vim	/^nnoremap <silent> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<space>j	cocdefaults.vim	/^nnoremap <silent> <space>j  :<C-u>CocNext<CR>$/;"	m
<space>k	cocdefaults.vim	/^nnoremap <silent> <space>k  :<C-u>CocPrev<CR>$/;"	m
<space>o	cocdefaults.vim	/^nnoremap <silent> <space>o  :<C-u>CocList outline<cr>$/;"	m
<space>p	cocdefaults.vim	/^nnoremap <silent> <space>p  :<C-u>CocListResume<CR>$/;"	m
<space>s	cocdefaults.vim	/^nnoremap <silent> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
Fold	cocdefaults.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Format	cocdefaults.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
H	tabs.vim	/^nnoremap H gT$/;"	m
K	cocdefaults.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
L	tabs.vim	/^nnoremap L gt$/;"	m
OR	cocdefaults.vim	/^command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
[	keybinds.vim	/^inoremap [ []<left>$/;"	m
[g	cocdefaults.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
]g	cocdefaults.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
af	cocdefaults.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
check_back_space	cocdefaults.vim	/^function! s:check_back_space() abort$/;"	f
g:auto_save	universal.vim	/^let g:auto_save = 1  " enable AutoSave on Vim startup$/;"	v
g:fzf_action	fzf.vim	/^let g:fzf_action = {$/;"	v
g:fzf_colors	fzf.vim	/^let g:fzf_colors =$/;"	v
g:fzf_history_dir	fzf.vim	/^let g:fzf_history_dir = '~\/.local\/share\/fzf-history'$/;"	v
g:fzf_layout	fzf.vim	/^let g:fzf_layout = { 'down': '~40%' }$/;"	v
g:fzf_layout	fzf.vim	/^let g:fzf_layout = { 'window': '-tabnew' }$/;"	v
g:fzf_layout	fzf.vim	/^let g:fzf_layout = { 'window': '10new' }$/;"	v
g:fzf_layout	fzf.vim	/^let g:fzf_layout = { 'window': 'enew' }$/;"	v
g:fzf_layout	fzf.vim	/^let g:fzf_layout = { 'window': { 'width': 0.6, 'height': 0.3 } }$/;"	v
g:go_auto_type_info	universal.vim	/^let g:go_auto_type_info = 1$/;"	v
g:go_fmt_command	universal.vim	/^let g:go_fmt_command = "goimports"$/;"	v
g:lightline	colorscheme.vim	/^let g:lightline = {$/;"	v
g:sneak#label	universal.vim	/^let g:sneak#label = 1$/;"	v
g:terminal_layout	universal.vim	/^let g:terminal_layout = { 'window': { 'width': 0.9, 'height': 0.6 } }$/;"	v
gd	keybinds.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
if	cocdefaults.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
mapleader	universal.vim	/^let mapleader = " "$/;"	v
mygroup	cocdefaults.vim	/^augroup mygroup$/;"	a
python3_host_prog	universal.vim	/^let python3_host_prog  ="\/usr\/bin\/python3"$/;"	v
python_host_prog	universal.vim	/^let python_host_prog  ="\/usr\/bin\/python2.7"$/;"	v
qd	keybinds.vim	/^nnoremap qd :silent! normal mpea"<Esc>bi"<Esc>`pl$/;"	m
ql	keybinds.vim	/^nnoremap ql :silent! normal mpEA"<Esc>bi"<Esc>`pl$/;"	m
qw	keybinds.vim	/^nnoremap qw :silent! normal mpea'<Esc>bi'<Esc>`pl$/;"	m
show_documentation	cocdefaults.vim	/^function! s:show_documentation()$/;"	f
td	tabs.vim	/^nnoremap td  :tabclose<CR>$/;"	m
th	tabs.vim	/^nnoremap th  :tabfirst<CR>$/;"	m
tj	tabs.vim	/^nnoremap tj  :tabprev<CR>$/;"	m
tk	tabs.vim	/^nnoremap tk  :tabnext<CR>$/;"	m
tl	tabs.vim	/^nnoremap tl  :tablast<CR>$/;"	m
tm	tabs.vim	/^nnoremap tm  :tabm<Space>$/;"	m
tn	tabs.vim	/^nnoremap tn  :tabnext<Space>$/;"	m
tt	tabs.vim	/^nnoremap tt  :tabedit<Space>$/;"	m
wq	keybinds.vim	/^nnoremap wq :silent! normal mpeld bhd `ph<CR>$/;"	m
{	keybinds.vim	/^inoremap { {}<left>$/;"	m
{;<CR>	keybinds.vim	/^inoremap {;<CR> {<CR>};<ESC>O$/;"	m
{<CR>	keybinds.vim	/^inoremap {<CR> {<CR>}<ESC>O$/;"	m
